var searchIndex = new Map(JSON.parse('[\
["mqtt_router",{"doc":"","t":"PPKFGPNNXNNNNMNNNNNNNNNNNNNNNNNNNO","n":["HandlerError","InvalidTopicName","RouteHandler","Router","RouterError","TryingToHandleTopicWithWildcards","add_closure_handler","add_handler","async_trait","borrow","borrow","borrow_mut","borrow_mut","call","default","fmt","fmt","from","from","from","handle_message","handle_message_ignore_errors","into","into","source","to_string","topics_for_subscription","try_from","try_from","try_into","try_into","type_id","type_id","topic"],"q":[[0,"mqtt_router"],[33,"mqtt_router::RouterError"],[34,"core::result"],[35,"anyhow"],[36,"core::future::future"],[37,"core::marker"],[38,"core::marker"],[39,"alloc::boxed"],[40,"core::pin"],[41,"core::fmt"],[42,"core::fmt"],[43,"core::error"],[44,"core::option"],[45,"alloc::string"],[46,"core::iter::traits::iterator"],[47,"core::any"]],"d":["Handler encountered and error while routing messages","Topic isn’t valid based on MQTT rules","Async handler for a route","Router with a set of handlers","","Topic containes wildcards which is not legal based on MQTT …","","Add new handler for a topic key","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Execute all matching handlers","Execute all matching handlers","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[4,4,0,0,0,4,1,1,0,4,1,4,1,14,1,4,4,4,4,1,1,1,4,1,4,4,1,4,1,4,1,4,1,27],"f":[0,0,0,0,0,0,[[1,2,-2],[[5,[3,4]]],[[8,[],[[6,[[5,[3,7]]]]]],9,10],[[13,[2,[12,[11]]],[[6,[-1]]]],9,10]],[[1,2,[15,[14]]],[[5,[3,4]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[14,2,[12,[11]]],[[16,[[15,[8]]]]]],[[],1],[[4,17],18],[[4,17],18],[-1,-1,[]],[7,4],[-1,-1,[]],[[1,2,[12,[11]]],[[5,[19,4]]]],[[1,2,[12,[11]]],[[5,[19,[20,[4]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[4,[[22,[21]]]],[-1,23,[]],[1,[[0,[[25,[],[[24,[23]]]]]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],0],"c":[],"p":[[5,"Router",0],[1,"str"],[1,"tuple"],[6,"RouterError",0],[6,"Result",34],[17,"Output"],[5,"Error",35],[10,"Future",36],[10,"Send",37],[10,"Sync",37],[1,"u8"],[1,"slice"],[10,"Fn",38],[10,"RouteHandler",0],[5,"Box",39],[5,"Pin",40],[5,"Formatter",41],[8,"Result",41],[1,"bool"],[5,"Vec",42],[10,"Error",43],[6,"Option",44],[5,"String",45],[17,"Item"],[10,"Iterator",46],[5,"TypeId",47],[15,"InvalidTopicName",33]],"b":[[15,"impl-Display-for-RouterError"],[16,"impl-Debug-for-RouterError"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
